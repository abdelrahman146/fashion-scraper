import { findIntersection } from "../utils/array.utils";

const colors = [
  "red",
  "crimson",
  "scarlet",
  "ruby",
  "blue",
  "azure",
  "cobalt",
  "navy",
  "green",
  "emerald",
  "lime",
  "olive",
  "pink",
  "rose",
  "fuchsia",
  "yellow",
  "gold",
  "lemon",
  "amber",
  "brown",
  "sienna",
  "umber",
  "purple",
  "violet",
  "lavender",
  "mauve",
  "black",
  "ebony",
  "onyx",
  "white",
  "ivory",
  "snow",
  "orange",
  "tangerine",
  "apricot",
  "gray",
  "silver",
  "ash",
  "charcoal",
  "light blue",
  "sky blue",
  "baby blue",
  "dark green",
  "forest green",
  "hunter green",
  "magenta",
  "rose red",
  "cyan",
  "turquoise",
  "aqua",
  "gold",
  "goldenrod",
  "multicolor",
  "golden",
  "brass",
  "silver",
  "steel",
  "platinum",
  "lime",
  "chartreuse",
  "indigo",
  "royal blue",
  "turquoise",
  "teal",
  "maroon",
  "burgundy",
  "navy",
  "midnight",
  "olive",
  "moss green",
  "teal",
  "aquamarine",
  "coral",
  "peach",
  "salmon",
  "violet",
  "orchid",
  "salmon",
  "peachy pink",
  "beige",
  "tan",
  "tan",
  "sand",
  "turquoise",
  "rouge",
  "periwinkle",
  "plum",
  "lilac",
  "peacock",
  "mint",
  "marigold",
  "mustard",
  "olive",
  "pine",
  "apple",
  "cadet",
  "violet",
  "raspberry",
  "mulberry",
  "wine",
  "brick",
  "terra",
  "sepia",
  "saddle",
  "chocolate",
  "coffee",
  "mahogany",
  "rosewood",
  "caramel",
  "honey",
  "bronze",
  "copper",
  "pearl",
  "almond",
  "champagne",
  "bisque",
  "pewter",
  "gunmetal",
  "sapphire",
  "cerulean",
  "periwinkle",
  "fandango",
  "dove",
  "platinum",
  "smoke",
  "sapphire",
  "cobalt",
  "cerulean",
  "periwinkle",
  "amethyst",
  "fandango",
  "watermelon",
  "flamingo",
  "butterscotch",
  "sunflower",
  "banana",
  "daffodil",
  "ghost",
  "cloud",
  "linen",
  "seashell",
  "bone",
  "paper",
];

export function findColor(text: string, fallbackColor?: string): string | null {
  const words = text
    .trim()
    .toLowerCase()
    .replace(/[^\w\s]/gi, " ")
    .split(" ");
  const int = findIntersection(words, colors);
  return int.join("/") || fallbackColor || null;
}
